@page "/itemlist"
@inject MyBlazorClient.Services.IItemService ItemService;

<h3>Item List</h3>

@if (items == null)
{
    <p>Loading...</p>
}
else
{
    <button class="btn btn-success" @onclick="NavigateToCreate">Create</button>
    <table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => NavigateToDetail(item.Id)">Detail</button>
                        <button class="btn btn-info btn-sm" @onclick="() => NavigateToEdit(item.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteItem(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<MyBlazorClient.Services.Item> items;

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        items = await ItemService.GetItems();
    }



    private void NavigateToDetail(int itemId)
    {
        NavigationManager.NavigateTo($"/itemdetail/{itemId}");
    }


    private void NavigateToEdit(int itemId)
    {
        NavigationManager.NavigateTo($"/itemdetail/update/{itemId}");
    }


    private async Task DeleteItem(int itemId)
    {
        bool deleted = await ItemService.DeleteItem(itemId);

        if (deleted)
        {
            items = await ItemService.GetItems();
        }
        else
        {

        }
    }

    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("/itemdetail/create");
    }

}
